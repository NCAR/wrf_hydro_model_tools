README - HRRR data regridding scripts for WRF-Hydro


PURPOSE

Scripts to regrid HRRR data to a WRF-Hydro domain using the ESMF
regridding functions within the NCAR Command Language (NCL). 

Created by: Linlin Pan, NCAR/RAL
Updated: 7/22/2017     K. FitzGerald & M. McAllister, NCAR/RAL
Updated: 3/20/2018     K. FitzGerald, NCAR/RAL

SOFTWARE REQUIREMENTS

NCAR Command Language (NCL) version 6.1.0 or later

DATA ACQUISITION

Acquire hourly 2D surface level HRRR data from NOAA's data server: 
http://www.ftp.ncep.noaa.gov/data/nccf/com/hrrr/prod
For more information regarding HRRR see here:
https://rapidrefresh.noaa.gov/hrrr/
 
REGRIDDING

The process to utilize ESMF regridding tools within the NCL programming language
is a 2 step process. 

The steps are as follows:

1. Create regridding 'weight' files required by the ESMF regridders. The weight
   files are netCDF files which specify interpolation weights between the source
   coordinate data grids (src) and destination coordinate data (dst) grids. The 
   weight file is generated by running the 'HRRR2WRFHydro_generate_weights.ncl' 
   script. Users will need to provide the source and destination grid filenames 
   as arguments to the script.


2. The second step is to then do the regridding using the 
   'HRRR2WRFHydro_regrid.ncl' script which ingests both source data and the 
   relevant weight file as inputs and then outputs regridded data on the 
   destination grid.

Thus the 2 scripts used to do the regridding are:

HRRR2WRFHydro_generate_weights.ncl

and

HRRR2WRFHydro_regrid.ncl

Input file requirements: 
1. A geogrid file (geo_em.d0x.nc) for your 'destination' domain (WRF-Hydro grid)

2. HRRR data (this contains the 'source' domain or grid)  

The HRRR data fields used by WRF-Hydro / the regridding scripts are:

"gridlat_0"   - latitude
"gridlon_0"   - longitude
"PRES_P0_L1_GLC0"   - pressure
"TMP_P0_L103_GLC0"  - air temperature
"UGRD_P0_L103_GLC0" - wind speed - u direction
"VGRD_P0_L103_GLC0" - wind speed - v direction
"SPFH_P0_L103_GLC0" - specific humidity 
"PRATE_P0_L1_GLC0" - precipitation rate
"DSWRF_P0_L1_GLC0" - incoming shortwave radiation
"DLWRF_P0_L1_GLC0" - incoming longwave radiation

Additional specific usage information for these scripts is provided in the
header of the script codes.

################################################################################
Running 'HRRR2WRFHydro_generate_weights.ncl':
################################################################################

Usage    : ncl 'interp_opt="bilinear"' 'srcGridName="input_files/hrrr.t14z.wrfsfcf00.grib2"' 'dstGridName="geo_em.d01.nc"' HRRR2WRFHydro_generate_weights.ncl

           interp_opt = conserve / bilinear 
           srcGridName = name of file that contains source grid with ".grb" 
                         appended to the end so that NCL recognizes the format
           dstGridName = name of file that contains the destination (WRF-Hydro)
                         grid

NOTES on the use of 'HRRRWRFHydro_generate_weights.ncl':
1. This script may take a while to run. 
2. Note that runtime increases with larger domain sizes and higher resolution.


################################################################################
Running 'HRRR2WRFHydro_regrid.ncl':
################################################################################

Usage   : ncl 'srcFileName="hrrr.*.grib2"' 'dstGridName="geo_em.d01.nc"' HRRR2WRFHydro_regrid.ncl

          srcFileName = filename pattern of the souce HRRR files.
                        e.g., "hrrr.t14z.wrfsfcf00.grib2",
                        "hrrr.*.grib2" , ...
          dstGridName = name of file that contains the destination (WRF-Hydro)
                        grid

NOTES on the use of HRRR2WRFHydro_regrid.ncl:
1. This script will use the regridding weight files created by the 
   'HRRR2WRFHydro_generate_weights.ncl' script. Therefore, do not change the
   names of those files or else this script will not be able to find them.
2. The source data to be regridded (HRRR forcing data with the default 
   filenames) needs to be placed in a local directory called 'input_files/'
3. The output data created from this script will be placed in a local directory
   called 'output_files/'. If this directory is not present the script will
   create it.
